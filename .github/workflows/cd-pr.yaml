name: Continuous Delivery - Pull Request
on:
  pull_request:
    branches:
      - master
    types: [closed]
jobs:
  Deployment:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: ACTIONS_ALLOW_UNSECURE_COMMANDS
        id: ACTIONS_ALLOW_UNSECURE_COMMANDS
        run: echo 'ACTIONS_ALLOW_UNSECURE_COMMANDS=true' >> $GITHUB_ENV

      - name: Import Secrets
        uses: hashicorp/vault-action@v2.0.1
        with:
          url: http://vault.centralus.cloudapp.azure.com:8200/
          token: ${{ secrets.VAULT_TOKEN }}
          tlsSkipVerify: true
          secrets: |
            secret/ci ARM_SUBSCRIPTION_ID ;
            secret/ci AZURE_LOGIN ;
            secret/ci AZURE_SECRET ;
            secret/ci REGISTRY_USERNAME ;
            secret/ci REGISTRY_PASSWORD ;
            secret/ci RESOURCE_GROUP ;
            secret/ci ACR ;
            secret/ci AKS ;
            secret/ci ACR_LINK ;

      - name: "Login to Azure CLI"
        run: |
          az login -u ${{ env.AZURE_LOGIN }} -p ${{ env.AZURE_SECRET }}

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_LINK }}
          username: ${{ env.REGISTRY_USERNAME  }}
          password: ${{ env.REGISTRY_PASSWORD  }}

      - name: Delete images
        run: |
          az acr repository delete --name ${{ env.ACR }} --image adservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image cartservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image checkoutservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image currencyservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image emailservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image frontend:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image loadgenerator:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image paymentservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image productcatalogservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image recommendationservice:v1 --yes
          az acr repository delete --name ${{ env.ACR }} --image shippingservice:v1 --yes
        continue-on-error: true

      - name: Building Ad Service 
        run: |
          cd src/adservice/
          docker push ${{ env.ACR_LINK }}/adservice:v1

      - name: Building Cart Service
        run: |
          cd src/cartservice/src/
          docker push ${{ env.ACR_LINK }}/cartservice:v1

      - name: Building Checkout Service
        run: |
          cd src/checkoutservice/
          docker push ${{ env.ACR_LINK }}/checkoutservice:v1
      
      - name: Building Currency Service
        run: |
          cd src/currencyservice/
          docker push ${{ env.ACR_LINK }}/currencyservice:v1
    
      - name: Building Email Service
        run: |
          cd src/emailservice/
          docker push ${{ env.ACR_LINK }}/emailservice:v1

      - name: Building Front-End
        run: |
          cd src/frontend/
          docker push ${{ env.ACR_LINK }}/frontend:v1

      - name: Building Load Generator
        run: |
          cd src/loadgenerator/
          docker push ${{ env.ACR_LINK }}/loadgenerator:v1

      - name: Building Payment Service
        run: |
          cd src/paymentservice/
          docker push ${{ env.ACR_LINK }}/paymentservice:v1

      - name: Building Product Catalog Service
        run: |
          cd src/productcatalogservice/
          docker push ${{ env.ACR_LINK }}/productcatalogservice:v1
    
      - name: Building Recommendation service
        run: |
          cd src/recommendationservice/
          docker push ${{ env.ACR_LINK }}/recommendationservice:v1

      - name: Building Shipping Service
        run: |
          cd src/shippingservice/
          docker push ${{ env.ACR_LINK }}/shippingservice:v1

      - name: "Login to Azure AKS"
        run: |
          az account set --subscription ${{ env.ARM_SUBSCRIPTION_ID }}
          az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AKS }}

      - name: Attaching Cluster
        run: |
          az aks update -n ${{ env.AKS }} -g ${{ env.RESOURCE_GROUP }} --attach-acr ${{ env.ACR }}

      - name: Checking the ACR
        run: |
          az aks check-acr --name ${{ env.AKS }} --resource-group ${{ env.RESOURCE_GROUP }} --acr ${{ env.ACR_LINK }}

      - name: Helm install
        run: helm install boutique ./boutique
        working-directory: chart/